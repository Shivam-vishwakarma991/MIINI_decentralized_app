{"version":3,"sources":["utils/loadContract.js","App.js","reportWebVitals.js","index.js"],"names":["loadcontract","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","name","provider","res","artifact","_contract","deployedContract","wrap","_context","prev","next","fetch","concat","sent","json","console","log","contract","setProvider","deployed","abrupt","stop","_x","_x2","apply","arguments","App","_useState","useState","web3","_useState2","_slicedToArray","web3Api","setweb3Api","_useState3","_useState4","Balance","setBalance","_useState5","_useState6","Account","setAccount","_useState7","_useState8","reload","setReload","reloadEffect","useEffect","loadProvider","detectEthereumProvider","request","method","Web3","error","transferFund","_ref2","_callee2","_context2","transfer","from","value","utils","toWei","WithdrawAmount","_ref3","_callee3","amount","_context3","withdraw","getbalance","_ref4","_callee4","balance","_context4","eth","getBalance","address","getaccount","_ref5","_callee5","account","_context5","getAccounts","_jsx","_Fragment","children","className","_jsxs","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.b3dc24e6.chunk.js","sourcesContent":["import contract from \"@truffle/contract\"\r\n\r\nexport const loadcontract= async (name, provider)=>{\r\n    const res= await fetch(`/contracts/${name}.json`);\r\n    const artifact= await res.json();\r\n    console.log(artifact)\r\n    const _contract= contract(artifact);\r\n    // console.log(_contract)\r\n    _contract.setProvider(provider);\r\n    const deployedContract= await _contract.deployed();\r\n    return deployedContract;\r\n\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Web3 from \"web3\";\r\nimport detectEthereumProvider from \"@metamask/detect-provider\";\r\nimport { loadcontract } from \"./utils/loadContract\";\r\n\r\nconst App = () => {\r\n  const [web3Api,  setweb3Api] = useState({\r\n    provider: null,\r\n    web3: null,\r\n    contract: null,\r\n  });\r\n\r\n  const [Balance, setBalance] = useState(null);\r\n  const [Account, setAccount] = useState(null);\r\n  const [reload, setReload] = useState(false);\r\n \r\n  const reloadEffect = () => {\r\n    setReload(!reload);\r\n  };\r\n\r\n  //USING PACKAGE FOR LESS LINE OF CODE\r\n  useEffect(() => {\r\n    const loadProvider = async () => {\r\n      const provider = await detectEthereumProvider();\r\n\r\n      //Here the instance of the contract has been created\r\n      const contract = await loadcontract(\"Funding\", provider); \r\n\r\n      if (provider) {\r\n        provider.request({ method: \"eth_requestAccounts\" });\r\n\r\n        setweb3Api({\r\n          web3: new Web3(provider),\r\n          provider,\r\n          contract,\r\n        });\r\n      } else {\r\n        console.error(\"Please install MetaMask\");\r\n      }\r\n    };\r\n    loadProvider();\r\n    reloadEffect();\r\n  }, []);\r\n\r\n  const transferFund = async () => {\r\n    const { web3, contract } = web3Api;\r\n    await contract.transfer({\r\n      from: Account,\r\n      value: web3.utils.toWei(\"0.00000002\", \"ether\"),\r\n    });\r\n    reloadEffect();\r\n  };\r\n\r\n  const WithdrawAmount = async () => {\r\n    const { web3, contract } = web3Api;\r\n    const amount = await web3.utils.toWei(\"0.00000002\", \"ether\");\r\n    await contract.withdraw(amount, {\r\n      from: Account,\r\n    });\r\n    reloadEffect();\r\n  };\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    const getbalance = async () => {\r\n      const { contract, web3 } = web3Api;\r\n      const balance = await web3.eth.getBalance(contract.address);\r\n      setBalance(balance);\r\n    };\r\n    web3Api.contract && getbalance(); //if web3api.web3 presents then only call getaccounts\r\n  }, [web3Api, reload]);\r\n\r\n  useEffect(() => {\r\n    const getaccount = async () => {\r\n      const account = await web3Api.web3.eth.getAccounts();\r\n      setAccount(account[0]);\r\n    };\r\n    web3Api.web3 && getaccount(); //if web3api.web3 presents then only call getaccounts\r\n  }, [web3Api.web3, reload]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid  vh-100 d-flex align-items-center justify-content-center bg-gradient \">\r\n        <div className=\"card text-center bg-gray w-70 rounded-3 border-0 shadow-lg\">\r\n          <div className=\"text-dark card-header text-uppercase fw-bold  bg-gradient text-light py-3 \">\r\n            Funding\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text mb-4 fw-bold  \">\r\n              Account: {Account ? Account : \"Connect to MetaMask\"}\r\n            </p>\r\n            <h5 className=\"card-title mb-4\">Contract Balance: {Balance} wei</h5>\r\n            <div className=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg me-sm-3 mb-3 mb-sm-0\"\r\n                onClick={transferFund}\r\n              >\r\n                Transfer\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary btn-lg hover\"\r\n                onClick={WithdrawAmount}\r\n              >\r\n                Withdraw\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-footer text-muted fw-bold bg-gradient text-light py-3\">\r\n            A decentralized application that lets you transfer and withdraw\r\n            funds within the contract using MetaMask,  the funds are stored within the contract itself, and can be withdrawn as needed.\r\n          </div>\r\n          <div className=\"card-footer text-muted fw-bold bg-gradient text-light py-3\">\r\n          A DAPP for smooth, seamless flow of funds between the user's wallet and the contract.\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n//USING IF ELSE STATEMENT TO DETECT ETHEREUM\r\n// useEffect(() => {\r\n//   const loadProvider = async () => {\r\n//     // console.log(window.web3);\r\n//     // console.log(window.ethereum);\r\n\r\n//     let provider = null;\r\n//     if (window.ethereum) {\r\n//       provider = window.ethereum;\r\n//       try {\r\n//         await provider.enable();\r\n//       }\r\n//       catch {\r\n//         console.error(\"this  is  error\");\r\n//       }\r\n//     } else if (window.web3) {\r\n//       provider = window.web3.currentProvider;\r\n//     } else if (!process.evm.production) {\r\n//       //The process object is a global object in Node.js that provides information about the current Node.js process.\r\n//       provider = new Web3.providers.HttpProvider(\"http://localhost:7545\");\r\n//     }\r\n\r\n//     //once we create a new instance of the Web3 object with the provider object, we can use the Web3 library to interact with the Ethereum blockchain through the provider object\r\n\r\n//     setweb3Api({\r\n//       web3: new Web3(provider),  //creating new instance with the provider so that we can use the Web3 library to interact with the Ethereum blockchain through the provider object.\r\n//       provider: provider\r\n//     })\r\n//   };\r\n//   loadProvider();\r\n// }, []);\r\n\r\n// console.log(web3Api.web3)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}